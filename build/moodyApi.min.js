(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["api"] = factory();
	else
		root["api"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("express");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("axios");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(3);

var _articleRouter = __webpack_require__(4);

var _articleRouter2 = _interopRequireDefault(_articleRouter);

var _express = __webpack_require__(0);

var _express2 = _interopRequireDefault(_express);

var _http = __webpack_require__(14);

var _http2 = _interopRequireDefault(_http);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

if (process.env.NODE_ENV === 'local') {
  __webpack_require__(15).config();
}

var app = (0, _express2.default)();

/* Creates server and web socket */
var server = _http2.default.createServer(app);

/* Set up apps with routers and their root URLs here */
app.use('/article', _articleRouter2.default);

/* Initialize server locally */
server.listen(process.env.PORT, function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(error) {
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (error) {
              console.log('Error initializing server: ' + error);
            }
            console.log('Server is ready on http://localhost:' + process.env.PORT);

          case 2:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}());

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("babel-polyfill");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _article = __webpack_require__(5);

var _article2 = _interopRequireDefault(_article);

var _express = __webpack_require__(0);

var _express2 = _interopRequireDefault(_express);

var _crawler = __webpack_require__(6);

var _crawler2 = _interopRequireDefault(_crawler);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

// For test

var articleRouter = _express2.default.Router();

/* Fetches the summarized articles in the last 24/7 given a project */
articleRouter.get('/project/:projectId', function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {
    var results;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return _crawler2.default.articles.saveAndSummarizeToDb();

          case 3:
            results = _context.sent;
            _context.next = 9;
            break;

          case 6:
            _context.prev = 6;
            _context.t0 = _context['catch'](0);

            res.status(500).send({ error: _context.t0.message });

          case 9:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined, [[0, 6]]);
  }));

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
}());

exports.default = articleRouter;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

// Fetch Articles from project from DB

function article() {
  var _this = this;

  this.projects = {
    getAll: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, _this);
      }));

      function getAll() {
        return _ref.apply(this, arguments);
      }

      return getAll;
    }(),
    get: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(projectId) {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, _this);
      }));

      function get(_x) {
        return _ref2.apply(this, arguments);
      }

      return get;
    }()
    // this.prices = {
    //   // Returns the current prices of all available currencies from Coinbase
    //   getSpotAll: async({ currency }) => {
    //     if (currency.toUpperCase() !== 'USD') {
    //       throw new ('Error: We only allow USD for now');
    //     }
    //     const url: string = `https://api.article.com/v2/prices/${currency}/spot`;
    //     const response: object = await request.get(url);
    //     const data: array<any> = response.data.data;
    //     let result: object  = { };
    //     for (let i = 0; i < data.length; i ++) {
    //       result[data[i].base] = `$${parseFloat(data[i].amount).toFixed(2)} ${data[i].currency}`;
    //     }
    //     return result;
    //   },
    // }
  };
}

var Article = new article();
exports.default = Article;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _axios = __webpack_require__(1);

var _axios2 = _interopRequireDefault(_axios);

var _Agolo = __webpack_require__(7);

var _Agolo2 = _interopRequireDefault(_Agolo);

var _cheerio = __webpack_require__(8);

var _colors = __webpack_require__(9);

var _colors2 = _interopRequireDefault(_colors);

var _momentTimezone = __webpack_require__(10);

var _momentTimezone2 = _interopRequireDefault(_momentTimezone);

var _underscore = __webpack_require__(11);

var _puppeteer = __webpack_require__(12);

var _puppeteer2 = _interopRequireDefault(_puppeteer);

var _constants = __webpack_require__(13);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

// Connect to DB

// Types for Flow


// Similar to agolo.js, TOOD: Refactor to type.js file in constant
function crawler() {
  var _this = this;

  this.articles = {
    /**
     * @description Gets all articleUrls from a open news web page
     */
    getUrls: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(url, articleListSelector) {
        var browser, page, html, $, articles, articleUrls, i;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                console.log(_colors2.default.green.bold('> Crawling for article Urls ' + url));
                _context.next = 3;
                return _puppeteer2.default.launch({ headless: true });

              case 3:
                browser = _context.sent;
                _context.next = 6;
                return browser.newPage();

              case 6:
                page = _context.sent;
                _context.next = 9;
                return page.goto(url, { waitUntil: ['load', 'domcontentloaded', 'networkidle2'] });

              case 9:
                _context.next = 11;
                return page.content();

              case 11:
                html = _context.sent;
                $ = _cheerio.cheerio.load(html);
                articles = $(articleListSelector);
                articleUrls = [];

                // Push all articles into array

                for (i = 0; i < articles.length; i++) {
                  articleUrls.push('' + articles[i].attribs.href);
                }

                // Clean articles to remove duplicate links if any
                articleUrls = (0, _underscore.uniq)(articleUrls);
                console.log(_colors2.default.green.bold('> Found ' + articleUrls.length + ' unique article links'));
                return _context.abrupt('return', articleUrls);

              case 19:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this);
      }));

      function getUrls(_x, _x2) {
        return _ref.apply(this, arguments);
      }

      return getUrls;
    }(),
    /**
     * @description Gets article content from an article web page
     */
    getContent: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(crawlParams) {
        var articleUrls, articlePrependUrl, articleHeaderSelector, articleDateSelector, articleTextSelector, hasWriter, hasHeader, hasDate, siteArticles, i, articleUrl, browser, page, html, $, articleHeader, articleWriter, articleDate, articleText, article;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                articleUrls = crawlParams.articleUrls, articlePrependUrl = crawlParams.articlePrependUrl, articleHeaderSelector = crawlParams.articleHeaderSelector, articleDateSelector = crawlParams.articleDateSelector, articleTextSelector = crawlParams.articleTextSelector, hasWriter = crawlParams.hasWriter, hasHeader = crawlParams.hasHeader, hasDate = crawlParams.hasDate;
                siteArticles = [];
                i = 0;

              case 3:
                if (!(i < articleUrls.length)) {
                  _context2.next = 33;
                  break;
                }

                _context2.prev = 4;
                articleUrl = articleUrls[i];

                console.log(_colors2.default.bold.green('\nScraping article url for content: ' + articlePrependUrl + articleUrl));
                _context2.next = 9;
                return _puppeteer2.default.launch({ headless: true });

              case 9:
                browser = _context2.sent;
                _context2.next = 12;
                return browser.newPage();

              case 12:
                page = _context2.sent;
                _context2.next = 15;
                return page.goto('' + articlePrependUrl + articleUrl, { waitUntil: ['load', 'domcontentloaded', 'networkidle2'] });

              case 15:
                _context2.next = 17;
                return page.content();

              case 17:
                html = _context2.sent;
                $ = _cheerio.cheerio.load(html);
                articleHeader = hasHeader ? $(articleHeaderSelector).text() : '';
                articleWriter = hasWriter ? $(articleHeaderSelector).text() : '';
                articleDate = hasDate ? $(articleDateSelector).text() : '';
                articleText = $(articleTextSelector).text();
                article = {
                  date: articleDate,
                  header: articleHeader,
                  text: articleText,
                  writer: articleWriter
                  // TODO: Do not push all article that are written more than 24 hours ago.
                };
                siteArticles.push(article);
                _context2.next = 30;
                break;

              case 27:
                _context2.prev = 27;
                _context2.t0 = _context2['catch'](4);

                console.log('Error scraping url: ' + articleUrls[i] + ': \n ' + _context2.t0.message);

              case 30:
                i++;
                _context2.next = 3;
                break;

              case 33:
                return _context2.abrupt('return', siteArticles);

              case 34:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, _this, [[4, 27]]);
      }));

      function getContent(_x3) {
        return _ref2.apply(this, arguments);
      }

      return getContent;
    }(),
    /**
     * @description Crawl all article urls from a list of company sites and subsequently crawl all their contents
     */
    getAll: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(companies) {
        var allSitesArticles, i, company, _articleUrls, _siteArticles, siteArticlesWithInfo;

        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                allSitesArticles = [];
                i = 0;

              case 2:
                if (!(i < companies.length)) {
                  _context3.next = 15;
                  break;
                }

                company = companies[i];
                _context3.next = 6;
                return _this.getUrls(company.url, company.articleListSelector);

              case 6:
                _articleUrls = _context3.sent;
                _context3.next = 9;
                return _this.getContent({
                  articleUrls: company.articleUrls,
                  articlePrependUrl: company.articlePrependUrl,
                  articleHeaderSelector: company.articleHeaderSelector,
                  articleDateSelector: company.articleDateSelector,
                  articleTextSelector: company.articleTextSelector,
                  hasWriter: company.hasWriter,
                  hasHeader: company.hasHeader,
                  hasDate: company.hasDate
                });

              case 9:
                _siteArticles = _context3.sent;
                siteArticlesWithInfo = {
                  siteArticles: _siteArticles,
                  name: company.name,
                  url: company.url
                };

                allSitesArticles.push(siteArticlesWithInfo);

              case 12:
                i++;
                _context3.next = 2;
                break;

              case 15:
                return _context3.abrupt('return', allSitesArticles);

              case 16:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, _this);
      }));

      function getAll(_x4) {
        return _ref3.apply(this, arguments);
      }

      return getAll;
    }(),
    /**
     * @description save each article from each
     */
    saveAndSummarizeToDb: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
        var allSitesArticles, i, siteArticlesWithInfo, _name, _url, _siteArticles2, j, article, originalText, originalHeader, options, _ref5, summary_title, summary_points, summarizedArticle;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return _this.getAll(_constants.COMPANY_SITES);

              case 2:
                allSitesArticles = _context4.sent;
                i = 0;

              case 4:
                if (!(i < allSitesArticles.length)) {
                  _context4.next = 26;
                  break;
                }

                siteArticlesWithInfo = allSitesArticles[i];
                _name = siteArticlesWithInfo.name, _url = siteArticlesWithInfo.url, _siteArticles2 = siteArticlesWithInfo.siteArticles;
                j = 0;

              case 8:
                if (!(j < _siteArticles2.length)) {
                  _context4.next = 23;
                  break;
                }

                article = _siteArticles2[j];
                originalText = article.text;
                originalHeader = article.header;
                options = {
                  title: article.header,
                  text: article.text,
                  summary_length: 10,
                  coref: false,
                  sort_by_salience: true,
                  include_all_sentences: false
                };
                _context4.next = 15;
                return _Agolo2.default.summarizer.summarize(options);

              case 15:
                _ref5 = _context4.sent;
                summary_title = _ref5.summary_title;
                summary_points = _ref5.summary_points;
                summarizedArticle = {
                  summary_title: summary_title,
                  summary_points: summary_points,
                  site_name: _name,
                  site_url: _url,
                  original_text: originalText,
                  original_header: originalHeader,
                  summarized: true,
                  date_written: article.date ? (0, _momentTimezone2.default)(article.date).tz('America/New_York').format('L') : (0, _momentTimezone2.default)().tz('America/New_York').format('L')
                  // Save to DB.
                };
                console.log('> Summarized Article:', summarizedArticle);

              case 20:
                j++;
                _context4.next = 8;
                break;

              case 23:
                i++;
                _context4.next = 4;
                break;

              case 26:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, _this);
      }));

      function saveAndSummarizeToDb() {
        return _ref4.apply(this, arguments);
      }

      return saveAndSummarizeToDb;
    }()
  };
}

var Crawler = new crawler();
exports.default = Crawler;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _axios = __webpack_require__(1);

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

// Connect to DB

// Types for flow
function agolo() {
  var _this = this;

  this.summarizer = {
    summarize: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(options) {
        var title, text, summary_length, coref, sort_by_salience, include_all_sentences, article, summarizer_options, AgoloAxios, response;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                // Prepare options for summarizing
                title = options.title, text = options.text, summary_length = options.summary_length, coref = options.coref, sort_by_salience = options.sort_by_salience, include_all_sentences = options.include_all_sentences;
                article = { title: title, text: text };
                summarizer_options = {
                  summary_length: summary_length,
                  articles: [article],
                  coref: coref,
                  sort_by_salience: sort_by_salience,
                  include_all_sentences: include_all_sentences
                };
                // Request for Agolo's API

                AgoloAxios = _axios2.default.create({
                  baseURL: process.env.AGOLO_URL,
                  headers: {
                    'Content-Type': 'application/json',
                    'Ocp-Apim-Subscription-Key': process.env.AGOLO_API_KEY
                  }
                });
                // Make request to Agolo Summarizer API & return

                _context.next = 6;
                return AgoloAxios.post('/', summarizer_options);

              case 6:
                response = _context.sent;
                return _context.abrupt('return', { summary_title: response.data.title, summary_points: response.data.summary[0].sentences });

              case 8:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this);
      }));

      function summarize(_x) {
        return _ref.apply(this, arguments);
      }

      return summarize;
    }()
  };
}

var Agolo = new agolo();
exports.default = Agolo;

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = require("cheerio");

/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = require("colors");

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = require("moment-timezone");

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = require("underscore");

/***/ }),
/* 12 */
/***/ (function(module, exports) {

module.exports = require("puppeteer");

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var COMPANY_SITES = exports.COMPANY_SITES = [{
  name: 'Dubai Holding',
  url: 'https://dubaiholding.com/en/media-hub/press-releases/',
  articlePrependUrl: '',
  articleListSelector: 'div.summary-wrap > h4 > a',
  articleHeaderSelector: 'div.container > h2',
  articleDateSelector: 'div.container > strong',
  articleTextSelector: 'div.container > p',
  articleWriterSelector: '',
  hasWriter: false,
  hasHeader: true,
  hasDate: true
}];

/***/ }),
/* 14 */
/***/ (function(module, exports) {

module.exports = require("http");

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = require("dotenv");

/***/ })
/******/ ]);
});
//# sourceMappingURL=moodyApi.min.js.map